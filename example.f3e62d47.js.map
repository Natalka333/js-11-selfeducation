{"mappings":"AAkGO,SAAEA,EAASC,GAMd,OAAOC,QAAQC,QALA,CACXC,MAAO,SACDC,KAAA,OACFC,WAAQ,YAEcL,G,EAGlCM,iBAEIC,QAAQC,UAAUT,EAAS,UAC3B,MAAMK,QAAaL,EAAS,QAC5BQ,QAAQC,IAAIJ,E,CAGhBK","sources":["src/js/example.js"],"sourcesContent":["//****ЗАПРОС */\n\n// fetch(\"https://jsonplaceholder.typicode.com/posts\")\n//     .then(response => response.json())\n//     .then(posts => console.log(posts))\n//     .catch(error => console.log(error));\n// Change this number to fetch different post\n// const postId = 1;\n\n// ***ЗАПРОС ПО ID***\n\n// fetch(`https://jsonplaceholder.typicode.com/posts/${postId}`)\n//     .then(response => response.json())\n//     .then(post => console.log(post))\n//     .catch(error => console.log(error));\n\n// ***СОЗДАНИЕ НОВІХ ДАННІХ****\n\n// const newPost = {\n//     \"userId\": 1,\n//     \"title\": \"loren ipsum\",\n//     \"body\": \"Hello\"\n// };\n\n\n// function addPost(post) {\n//     const option = {\n//         method: 'POST',\n//         headers: {\n//             'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify(post),\n//     }\n//     return fetch('https://jsonplaceholder.typicode.com/posts', option).then(response => response.json());\n// }\n\n\n// addPost(newPost).then(renderPost).catch(error => console.log(error));\n\n// function renderPost(post) {\n//     console.log('Пришел ответ от бекенда можно рисовать');\n//     console.log(post);\n// }\n\n// ****UPDATE*****\n\n// function updatePostById(update, postId) {\n//     const option = {\n//         method: 'PATCH',\n//         headers: {\n//             \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify(update),\n//     }\n//     return fetch(`https://jsonplaceholder.typicode.com/posts/${postId}`, option).then(response => response.json());\n// }\n\n//     updatePostById({ body: \"Hello my cool Nataly!\"}, 1 );\n//     updatePostById({ title: 'See you my dear!'}, 2 );\n//     updatePostById({ body: 'Good buy', title: 'I will be back!'}, 3 );\n\n// ***** DELITE****\n\n// const postIdToDelete = 1;\n\n// fetch(`https://jsonplaceholder.typicode.com/posts/${postIdToDelete}`, {\n//     method: \"DELETE\",\n// })\n//     .then(() => console.log(\"Post deleted\"))\n//     .catch(error => console.log(\"Error:\", error));\n\n// ** ИЛИ ТАК УДАЛИТЬ**\n\n// function removePost(postId) {\n//     const options = {\n//         metod: 'DELETE',\n//     }\n//     return fetch(`https://jsonplaceholder.typicode.com/posts/${postId}`, options)\n//     .then(response => response.json());\n// }\n\n// removePost(1)\n\n// ***АСИНХРОННІЕ ЗАПРОСІ***\n\n// const fetchFriends = async () => {\n//     const token = await fetch(\"my-api.com/me\");\n//     const user = await fetch(`my-api.com/profile?token=${token}`);\n//     const friends = await fetch(`my-api.com/users/${user.id}/friends`);\n//     return friends;\n// };\n\n// fetchFriends()\n//     .then(friends => console.log(friends))\n//     .catch(error => console.error(error));\n\n// ******* 2 ВАРИАНТ   ASYNC *****\n\nfunction getFruit(name) {\n    const fruits = {\n        apple: 'яблоко',\n        kiwi: 'киви',\n        strawberry: 'клубника',\n    };\n    return Promise.resolve(fruits[name]);\n};\n\nasync function aMakeSmoothie() {\n    // const apple = await getFruit('apple');\n    console.log(await getFruit('apple'));\n    const kiwi = await getFruit('kiwi');\n    console.log(kiwi);\n}\n\naMakeSmoothie();\n\n// *** БЕЗ АСИНКА И АВЕЙТА**\n// function makeSmoothie() {\n//     getFruit('apple').then(apple => {\n//         console.log(apple);\n//     });\n//     getFruit('kiwi').then(kiwi => {\n//         console.log(kiwi);\n//     });\n// }\n// makeSmoothie()"],"names":["$5ccd92ce5a98fddf$var$getFruit","name","Promise","resolve","apple","kiwi","strawberry","async","console","log","$5ccd92ce5a98fddf$var$aMakeSmoothie"],"version":3,"file":"example.f3e62d47.js.map"}